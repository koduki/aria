irb(main):034> json_data[0]["contents"][0]["contents"][0]

summary = json_data[0]["contents"][0]["contents"][0]["body"]
son_data ='json_data = JSON.parse(File.read('contents.json'));1

client = Gemini::Gemini.new(
  credentials: {
    service: 'generative-language-api',
    api_key: api_key
  },
  options: { model: 'gemini-2.0-flash-exp', server_sent_events: true, system_instruction: <<~INSTRUCTION
    **Please create a report in Japanese using Markdown format, following the steps and policies outlined below. Use only the information provided by the user as the sole source (grounding), and avoid careless speculation or supplementation that could lead to hallucinations.**

    1. **Use only the information given by the user.** If additional information is needed or there are unclear points in the provided data, do not resort to speculation or external sources.  
    2. **Extract key information from the search results for each theme and summarize it concisely.**  
    3. **Integrate the summaries of each theme to create a coherent report.**  
    4. **Structure of the report**  
    - First, introduce the basic concepts of Docker.  
    - Next, introduce the basic concepts of Podman.  
    - Then, detail the main differences between Docker and Podman in terms of architecture, usage, security, etc.  
    - Finally, discuss their compatibility and migration.  

    **Please adhere strictly to these rules when creating the report.**
 INSTRUCTION
  }
)
r = client.generate_content({
    contents: [{ role: 'user', parts: [{ text: File.read('contents.json') }] }]
})
puts r[:response]["content"]["parts"][0]["text"]





ウェブサイトをリサーチ
AIエージェントとMCPについて教えてください。従来のFunctional Callingとは違うの？
(1) AIエージェントとMCPの定義をそれぞれ調べてください。
(2) AIエージェントとMCPの機能と役割をそれぞれ調べてください。
(3) 従来のFunctional Callingの定義、機能、役割を調べてください。
(4) AIエージェント、MCP、従来のFunctional Callingのそれぞれの特徴を比較し、違いを明確にしてください。
(5) AIエージェント、MCP、従来のFunctional Callingのそれぞれがどのような場面で活用されるのか、具体的な例を挙げてください。
(6) AIエージェントとMCPの関係性について調べてください。MCPはAIエージェントの一部なのか、それとも別の概念なのか、明確にしてください。
(7) AIエージェントとMCPの将来展望について調べてください。今後どのように発展していくのか、どのような可能性を秘めているのか、具体的な例を挙げてください。


あなたはユーザの質問に代理で調査をしレポートを作成するエージェントです。
質問された内容に対して、Webで検索し、その複数の検索結果からレポートを作るための手順を提案してください。
大きな方針としては以下のような思考プロセスを通ります。
1. 質問された内容を分解し、複数のテーマに分解しユーザに列挙
2. 上記の調べたテーマをどのように組み合わせれば質問された内容の解答を作ることが出来るをユーザに列挙
3. 上記のテーマを検索するにふさわしいそれぞれの検索ワードを列挙

出力フォーマットはJSONで

{
    "サーチテーマ": [{"テーマ":xxx, "search-words":[aaa, bbb,ccc] }, {"テーマ":yyy, "search-words":[ddd, ee] }],
    "report-create-proceduers":[]
}

質問内容は

- "AIエージェントとMCPについて教えてください。従来のFunctional Callingとは違うの？"

です。

1. 質問された内容から適切な検索ワードを抽出する。複数のテーマを調べる必要があるときは、それぞれの目的にマッチした検索ワードを作ってください。
2. 1の検索方針を提案
3. 



Below is a revised prompt in English, incorporating Chain-of-Thought Prompting to encourage step-by-step reasoning. You can use this as a template when instructing an LLM:
Prompt (English Version with Chain-of-Thought and Improvements)




You are an agent acting on the user’s behalf to conduct research on the web and compile a report. The user’s question is:

"DockerとPodmanの違いは？"

Please propose a step-by-step method for creating a comprehensive report from multiple web search results. Follow these guidelines:

Break down the question using a chain-of-thought approach:
Reason step-by-step to identify multiple sub-themes relevant to the user’s query.
List these sub-themes in a clear, concise manner.
Explain how combining these sub-themes can form a complete answer:
Show the logical flow of how each sub-theme connects to fully address the user’s question.
(You may keep your detailed chain-of-thought reasoning internal; only provide a concise explanation to the user in the designated JSON output field.)
List suitable search keywords for each sub-theme:
For every sub-theme identified, propose multiple candidate keywords that a web search agent can use.
Output Format:

Your final output must be in JSON with the following structure (in English). Do not include your chain-of-thought in the output—only the final structured data.
{
  "search-themes": [
    {
      "theme": "What are AI Agents?",
      "search-words": ["AI agent", "autonomous agent", "intelligent agent"]
    },
    {
      "theme": "What is MCP in the context of AI agents?",
      "search-words": ["MCP AI agent", "Master Control Program AI", "agent framework MCP"]
    },
    {
      "theme": "Understanding Functional Calling",
      "search-words": ["functional calling", "function calling in programming", "what is functional calling"]
    },
    {
      "theme": "Comparison between AI Agents/MCP and Functional Calling",
      "search-words": ["AI agent vs functional calling", "MCP vs functional calling", "difference between AI agent and function call"]
    }
  ],
  "report-creation-procedures": [
    "1. Search the web using the keywords for each theme.",
    "2. From the search results for each theme, extract key information and summarize it concisely.",
    "3. Synthesize the summaries from each theme to create a coherent report.",
    "4. The report should first introduce AI Agents, then explain MCP, followed by an explanation of Functional Calling, and finally compare and contrast AI Agents/MCP with Functional Calling, highlighting their differences.",
    "5. If relevant information is missing after the initial search, reformulate the search keywords for that theme and try again."
  ],
}
Remember:

Use English for all keys and values in the JSON.
Do not add any additional keys beyond what is specified.
Incorporate chain-of-thought reasoning in your internal process, but only output the final JSON structure to the user.
